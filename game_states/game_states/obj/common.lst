                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module common
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _DrawNumber
                                     12 	.globl _strlen
                                     13 	.globl _uitoa
                                     14 	.globl _get_bkg_xy_addr
                                     15 	.globl _set_vram_byte
                                     16 	.globl _joypadPrevious
                                     17 	.globl _joypadCurrent
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
      000000                         25 _joypadCurrent::
      000000                         26 	.ds 1
      000001                         27 _joypadPrevious::
      000001                         28 	.ds 1
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _INITIALIZED
                                     33 ;--------------------------------------------------------
                                     34 ; absolute external ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DABS (ABS)
                                     37 ;--------------------------------------------------------
                                     38 ; global & static initialisations
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _GSINIT
                                     42 	.area _GSFINAL
                                     43 	.area _GSINIT
                                     44 ;--------------------------------------------------------
                                     45 ; Home
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 	.area _HOME
                                     49 ;--------------------------------------------------------
                                     50 ; code
                                     51 ;--------------------------------------------------------
                                     52 	.area _CODE
                                     53 ;res\common.c:10: void DrawNumber(uint8_t x, uint8_t y, uint16_t number, uint8_t digits)
                                     54 ;	---------------------------------
                                     55 ; Function DrawNumber
                                     56 ; ---------------------------------
      000000                         57 _DrawNumber::
      000000 E8 EC            [16]   58 	add	sp, #-20
      000002 F8 10            [12]   59 	ldhl	sp,	#16
      000004 32               [ 8]   60 	ld	(hl-), a
      000005 73               [ 8]   61 	ld	(hl), e
                                     62 ;res\common.c:12: unsigned char buffer[8]="00000000";
      000006 F8 00            [12]   63 	ldhl	sp,	#0
      000008 3E 30            [ 8]   64 	ld	a,#0x30
      00000A 22               [ 8]   65 	ld	(hl+),a
      00000B 22               [ 8]   66 	ld	(hl+), a
      00000C 3E 30            [ 8]   67 	ld	a,#0x30
      00000E 22               [ 8]   68 	ld	(hl+),a
      00000F 22               [ 8]   69 	ld	(hl+), a
      000010 3E 30            [ 8]   70 	ld	a,#0x30
      000012 22               [ 8]   71 	ld	(hl+),a
      000013 22               [ 8]   72 	ld	(hl+), a
      000014 3E 30            [ 8]   73 	ld	a, #0x30
      000016 22               [ 8]   74 	ld	(hl+), a
      000017 36 30            [12]   75 	ld	(hl), #0x30
                                     76 ;res\common.c:15: uitoa(number, buffer, 10);
      000019 F8 16            [12]   77 	ldhl	sp,	#22
      00001B 7E               [ 8]   78 	ld	a, (hl)
      00001C F8 12            [12]   79 	ldhl	sp,	#18
      00001E 77               [ 8]   80 	ld	(hl), a
      00001F F8 17            [12]   81 	ldhl	sp,	#23
      000021 7E               [ 8]   82 	ld	a, (hl)
      000022 F8 13            [12]   83 	ldhl	sp,	#19
      000024 77               [ 8]   84 	ld	(hl), a
      000025 3E 0A            [ 8]   85 	ld	a, #0x0a
      000027 F5               [16]   86 	push	af
      000028 33               [ 8]   87 	inc	sp
      000029 21 01 00         [12]   88 	ld	hl, #1
      00002C 39               [ 8]   89 	add	hl, sp
      00002D E5               [16]   90 	push	hl
      00002E F8 15            [12]   91 	ldhl	sp,	#21
      000030 2A               [ 8]   92 	ld	a, (hl+)
      000031 5F               [ 4]   93 	ld	e, a
      000032 56               [ 8]   94 	ld	d, (hl)
      000033 D5               [16]   95 	push	de
      000034 CDr00r00         [24]   96 	call	_uitoa
      000037 E8 05            [16]   97 	add	sp, #5
                                     98 ;res\common.c:18: uint8_t *vramAddr = get_bkg_xy_addr(x,y); 
      000039 F8 0F            [12]   99 	ldhl	sp,	#15
      00003B 2A               [ 8]  100 	ld	a, (hl+)
      00003C 57               [ 4]  101 	ld	d, a
      00003D 5E               [ 8]  102 	ld	e, (hl)
      00003E D5               [16]  103 	push	de
      00003F CDr00r00         [24]  104 	call	_get_bkg_xy_addr
      000042 E1               [12]  105 	pop	hl
      000043 F8 12            [12]  106 	ldhl	sp,	#18
      000045 7B               [ 4]  107 	ld	a, e
      000046 22               [ 8]  108 	ld	(hl+), a
      000047 72               [ 8]  109 	ld	(hl), d
      000048 F8 12            [12]  110 	ldhl	sp,	#18
      00004A 7E               [ 8]  111 	ld	a, (hl)
      00004B F8 0D            [12]  112 	ldhl	sp,	#13
      00004D 77               [ 8]  113 	ld	(hl), a
      00004E F8 13            [12]  114 	ldhl	sp,	#19
      000050 7E               [ 8]  115 	ld	a, (hl)
      000051 F8 0E            [12]  116 	ldhl	sp,	#14
      000053 77               [ 8]  117 	ld	(hl), a
                                    118 ;res\common.c:21: uint8_t len = strlen(buffer);
      000054 21 00 00         [12]  119 	ld	hl, #0
      000057 39               [ 8]  120 	add	hl, sp
      000058 E5               [16]  121 	push	hl
      000059 CDr00r00         [24]  122 	call	_strlen
      00005C E1               [12]  123 	pop	hl
      00005D F8 12            [12]  124 	ldhl	sp,	#18
      00005F 7B               [ 4]  125 	ld	a, e
      000060 22               [ 8]  126 	ld	(hl+), a
      000061 72               [ 8]  127 	ld	(hl), d
      000062 F8 12            [12]  128 	ldhl	sp,	#18
      000064 7E               [ 8]  129 	ld	a, (hl)
      000065 F8 08            [12]  130 	ldhl	sp,	#8
      000067 77               [ 8]  131 	ld	(hl), a
                                    132 ;res\common.c:26: for (uint8_t i=0; i<digits-len;i++)
      000068 F8 0D            [12]  133 	ldhl	sp,	#13
      00006A 7E               [ 8]  134 	ld	a, (hl)
      00006B F8 11            [12]  135 	ldhl	sp,	#17
      00006D 77               [ 8]  136 	ld	(hl), a
      00006E F8 0E            [12]  137 	ldhl	sp,	#14
      000070 7E               [ 8]  138 	ld	a, (hl)
      000071 F8 12            [12]  139 	ldhl	sp,	#18
      000073 22               [ 8]  140 	ld	(hl+), a
      000074 36 00            [12]  141 	ld	(hl), #0x00
      000076                        142 00104$:
      000076 F8 18            [12]  143 	ldhl	sp,	#24
      000078 7E               [ 8]  144 	ld	a, (hl)
      000079 F8 09            [12]  145 	ldhl	sp,	#9
      00007B 22               [ 8]  146 	ld	(hl+), a
      00007C AF               [ 4]  147 	xor	a, a
      00007D 32               [ 8]  148 	ld	(hl-), a
      00007E 2B               [ 8]  149 	dec	hl
      00007F 7E               [ 8]  150 	ld	a, (hl)
      000080 F8 0B            [12]  151 	ldhl	sp,	#11
      000082 22               [ 8]  152 	ld	(hl+), a
      000083 AF               [ 4]  153 	xor	a, a
      000084 32               [ 8]  154 	ld	(hl-), a
      000085 2B               [ 8]  155 	dec	hl
      000086 2B               [ 8]  156 	dec	hl
      000087 2A               [ 8]  157 	ld	a, (hl+)
      000088 5F               [ 4]  158 	ld	e, a
      000089 2A               [ 8]  159 	ld	a, (hl+)
      00008A 57               [ 4]  160 	ld	d, a
      00008B 2A               [ 8]  161 	ld	a,	(hl+)
      00008C 66               [ 8]  162 	ld	h, (hl)
      00008D 6F               [ 4]  163 	ld	l, a
      00008E 7B               [ 4]  164 	ld	a, e
      00008F 95               [ 4]  165 	sub	a, l
      000090 5F               [ 4]  166 	ld	e, a
      000091 7A               [ 4]  167 	ld	a, d
      000092 9C               [ 4]  168 	sbc	a, h
      000093 F8 0E            [12]  169 	ldhl	sp,	#14
      000095 32               [ 8]  170 	ld	(hl-), a
      000096 73               [ 8]  171 	ld	(hl), e
      000097 F8 13            [12]  172 	ldhl	sp,	#19
      000099 4E               [ 8]  173 	ld	c, (hl)
      00009A 06 00            [ 8]  174 	ld	b, #0x00
      00009C F8 0D            [12]  175 	ldhl	sp,	#13
      00009E 79               [ 4]  176 	ld	a, c
      00009F 96               [ 8]  177 	sub	a, (hl)
      0000A0 23               [ 8]  178 	inc	hl
      0000A1 78               [ 4]  179 	ld	a, b
      0000A2 9E               [ 8]  180 	sbc	a, (hl)
      0000A3 78               [ 4]  181 	ld	a, b
      0000A4 57               [ 4]  182 	ld	d, a
      0000A5 CB 7E            [12]  183 	bit	7, (hl)
      0000A7 28 07            [12]  184 	jr	Z, 00133$
      0000A9 CB 7A            [ 8]  185 	bit	7, d
      0000AB 20 08            [12]  186 	jr	NZ, 00134$
      0000AD BF               [ 4]  187 	cp	a, a
      0000AE 18 05            [12]  188 	jr	00134$
      0000B0                        189 00133$:
      0000B0 CB 7A            [ 8]  190 	bit	7, d
      0000B2 28 01            [12]  191 	jr	Z, 00134$
      0000B4 37               [ 4]  192 	scf
      0000B5                        193 00134$:
      0000B5 30 27            [12]  194 	jr	NC, 00101$
                                    195 ;res\common.c:28: set_vram_byte(vramAddr++, 272);
      0000B7 F8 11            [12]  196 	ldhl	sp,	#17
      0000B9 7E               [ 8]  197 	ld	a, (hl)
      0000BA F8 0D            [12]  198 	ldhl	sp,	#13
      0000BC 77               [ 8]  199 	ld	(hl), a
      0000BD F8 12            [12]  200 	ldhl	sp,	#18
      0000BF 7E               [ 8]  201 	ld	a, (hl)
      0000C0 F8 0E            [12]  202 	ldhl	sp,	#14
      0000C2 77               [ 8]  203 	ld	(hl), a
      0000C3 F8 11            [12]  204 	ldhl	sp,	#17
      0000C5 34               [12]  205 	inc	(hl)
      0000C6 20 02            [12]  206 	jr	NZ, 00135$
      0000C8 23               [ 8]  207 	inc	hl
      0000C9 34               [12]  208 	inc	(hl)
      0000CA                        209 00135$:
      0000CA 3E 10            [ 8]  210 	ld	a, #0x10
      0000CC F5               [16]  211 	push	af
      0000CD 33               [ 8]  212 	inc	sp
      0000CE F8 0E            [12]  213 	ldhl	sp,	#14
      0000D0 2A               [ 8]  214 	ld	a, (hl+)
      0000D1 5F               [ 4]  215 	ld	e, a
      0000D2 56               [ 8]  216 	ld	d, (hl)
      0000D3 D5               [16]  217 	push	de
      0000D4 CDr00r00         [24]  218 	call	_set_vram_byte
      0000D7 E8 03            [16]  219 	add	sp, #3
                                    220 ;res\common.c:26: for (uint8_t i=0; i<digits-len;i++)
      0000D9 F8 13            [12]  221 	ldhl	sp,	#19
      0000DB 34               [12]  222 	inc	(hl)
      0000DC 18 98            [12]  223 	jr	00104$
      0000DE                        224 00101$:
                                    225 ;res\common.c:33: for (uint8_t i=0; i<len; i++)
      0000DE F8 11            [12]  226 	ldhl	sp,	#17
      0000E0 2A               [ 8]  227 	ld	a, (hl+)
      0000E1 4F               [ 4]  228 	ld	c, a
      0000E2 46               [ 8]  229 	ld	b, (hl)
      0000E3 1E 00            [ 8]  230 	ld	e, #0x00
      0000E5                        231 00107$:
      0000E5 7B               [ 4]  232 	ld	a, e
      0000E6 F8 08            [12]  233 	ldhl	sp,	#8
      0000E8 96               [ 8]  234 	sub	a, (hl)
      0000E9 30 1C            [12]  235 	jr	NC, 00109$
                                    236 ;res\common.c:35: set_vram_byte(vramAddr++, (buffer[i] -'0')+272);
      0000EB D5               [16]  237 	push	de
      0000EC 16 00            [ 8]  238 	ld	d, #0x00
      0000EE 21 02 00         [12]  239 	ld	hl, #2
      0000F1 39               [ 8]  240 	add	hl, sp
      0000F2 19               [ 8]  241 	add	hl, de
      0000F3 D1               [12]  242 	pop	de
      0000F4 7E               [ 8]  243 	ld	a, (hl)
      0000F5 C6 E0            [ 8]  244 	add	a, #0xe0
      0000F7 69               [ 4]  245 	ld	l, c
                                    246 ;	spillPairReg hl
                                    247 ;	spillPairReg hl
      0000F8 60               [ 4]  248 	ld	h, b
                                    249 ;	spillPairReg hl
                                    250 ;	spillPairReg hl
      0000F9 03               [ 8]  251 	inc	bc
      0000FA D5               [16]  252 	push	de
      0000FB F5               [16]  253 	push	af
      0000FC 33               [ 8]  254 	inc	sp
      0000FD E5               [16]  255 	push	hl
      0000FE CDr00r00         [24]  256 	call	_set_vram_byte
      000101 E8 03            [16]  257 	add	sp, #3
      000103 D1               [12]  258 	pop	de
                                    259 ;res\common.c:33: for (uint8_t i=0; i<len; i++)
      000104 1C               [ 4]  260 	inc	e
      000105 18 DE            [12]  261 	jr	00107$
      000107                        262 00109$:
                                    263 ;res\common.c:37: }
      000107 E8 14            [16]  264 	add	sp, #20
      000109 E1               [12]  265 	pop	hl
      00010A E8 03            [16]  266 	add	sp, #3
      00010C E9               [ 4]  267 	jp	(hl)
                                    268 	.area _CODE
                                    269 	.area _INITIALIZER
                                    270 	.area _CABS (ABS)
